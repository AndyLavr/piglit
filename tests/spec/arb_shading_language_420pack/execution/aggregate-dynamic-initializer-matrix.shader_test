/* The ARB_shading_language_420pack suggests:
 *
 *     Verify that the following three matrices are identical:
 *
 *         mat2x2 a = mat2(  vec2( 1.0, 0.0 ), vec2( 0.0, 1.0 ) );
 *         mat2x2 b =      { vec2( 1.0, 0.0 ), vec2( 0.0, 1.0 ) };
 *         mat2x2 c =      {     { 1.0, 0.0 },     { 0.0, 1.0 } };
 *
 * This test differs from aggregate-initializer-matrix.shader_test
 * in that it includes one dynamic variable, to further test the
 * compiler.  Otherwise, the initializer is constant folded away.
 * The matrices should still be identical.
 */

[require]
GLSL >= 1.30
GL_ARB_shading_language_420pack

[vertex shader]
#extension GL_ARB_shading_language_420pack: enable

in vec4 piglit_vertex;
out vec4 color;

void main()
{
    mat2x2 a = mat2(  vec2( 1.0, piglit_vertex.x ), vec2( 0.0, 1.0 ) );
    mat2x2 b =      { vec2( 1.0, piglit_vertex.x ), vec2( 0.0, 1.0 ) };
    mat2x2 c =      {     { 1.0, piglit_vertex.x },     { 0.0, 1.0 } };

    color = vec4(0.0, 1.0, 0.0, 1.0);

    if (a.length() != b.length() || a.length() != c.length()) {
        color = vec4(0.0, 0.0, 1.0, 1.0);
    } else {
        for (int i = 0; i < a.length(); i++) {
            if (a[i] != b[i] || a[i] != c[i]) {
                color = vec4(1.0, 0.0, 0.0, 1.0);
            }
        }
    }
    gl_Position = piglit_vertex;
}

[fragment shader]
in vec4 color;
out vec4 frag_color;

void main() {
    frag_color = color;
}

[test]
draw rect -1 -1 2 2
probe all rgba 0.0 1.0 0.0 1.0
