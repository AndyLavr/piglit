/* The ARB_shading_language_420pack suggests:
 *
 *    Verify that the following two arrays are identical:
 *
 *        vec4 a[] = vec4 [] (vec4(1.2), vec4(0.0), vec4(0.0), vec4(0.0),
 *                            vec4(0.0), vec4(0.0), vec4(0.0), vec4(2.4),
 *                            vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0),
 *                            vec4(0.0), vec4(0.0), vec4(0.0), vec4(3.6));
 *        vec4 b[] =        { vec4(1.2), vec4(0.0), vec4(0.0), vec4(0.0),
 *                            vec4(0.0), vec4(0.0), vec4(0.0), vec4(2.4),
 *                            vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0),
 *                            vec4(0.0), vec4(0.0), vec4(0.0), vec4(3.6) };
 */

[require]
GLSL >= 1.30
GL_ARB_shading_language_420pack

[vertex shader]
#extension GL_ARB_shading_language_420pack: enable

in vec4 piglit_vertex;
out vec4 color;

void main()
{
    vec4 a[] = vec4 [] (vec4(1.2), vec4(0.0), vec4(0.0), vec4(0.0),
                        vec4(0.0), vec4(0.0), vec4(0.0), vec4(2.4),
                        vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0),
                        vec4(0.0), vec4(0.0), vec4(0.0), vec4(3.6));
    vec4 b[] =        { vec4(1.2), vec4(0.0), vec4(0.0), vec4(0.0),
                        vec4(0.0), vec4(0.0), vec4(0.0), vec4(2.4),
                        vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0),
                        vec4(0.0), vec4(0.0), vec4(0.0), vec4(3.6) };

    color = vec4(0.0, 1.0, 0.0, 1.0);

    if (a.length() != b.length()) {
        color = vec4(0.0, 0.0, 1.0, 1.0);
    } else {
        for (int i = 0; i < a.length(); i++) {
            if (a[i] != b[i]) {
                color = vec4(1.0, 0.0, 0.0, 1.0);
            }
        }
    }
    gl_Position = piglit_vertex;
}

[fragment shader]
in vec4 color;
out vec4 frag_color;

void main() {
    frag_color = color;
}

[test]
draw rect -1 -1 2 2
probe all rgba 0.0 1.0 0.0 1.0
