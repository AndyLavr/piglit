# Using the same block on two different stages
# Wrong: using a different type on one of the variables on one of the stages.

[require]
SPIRV YES
GL >= 3.3
GLSL >= 3.30
GL_ARB_gl_spirv

[vertex shader spirv]
; Automatically generated from the GLSL by shader_test_spirv.py. DO NOT EDIT
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 4
; Bound: 45
; Schema: 0
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Vertex %main "main" %_ %position %gl_VertexID %gl_InstanceID
               OpSource GLSL 450
               OpName %main "main"
               OpName %gl_PerVertex "gl_PerVertex"
               OpMemberName %gl_PerVertex 0 "gl_Position"
               OpMemberName %gl_PerVertex 1 "gl_PointSize"
               OpMemberName %gl_PerVertex 2 "gl_ClipDistance"
               OpMemberName %gl_PerVertex 3 "gl_CullDistance"
               OpName %_ ""
               OpName %position "position"
               OpName %extPosition "extPosition"
               OpName %ComponentsBlock "ComponentsBlock"
               OpMemberName %ComponentsBlock 0 "c1"
               OpMemberName %ComponentsBlock 1 "c2"
               OpName %components "components"
               OpName %gl_VertexID "gl_VertexID"
               OpName %gl_InstanceID "gl_InstanceID"
               OpMemberDecorate %gl_PerVertex 0 BuiltIn Position
               OpMemberDecorate %gl_PerVertex 1 BuiltIn PointSize
               OpMemberDecorate %gl_PerVertex 2 BuiltIn ClipDistance
               OpMemberDecorate %gl_PerVertex 3 BuiltIn CullDistance
               OpDecorate %gl_PerVertex Block
               OpDecorate %position Location 0
               OpDecorate %extPosition Location 20
               OpMemberDecorate %ComponentsBlock 0 Offset 0
               OpMemberDecorate %ComponentsBlock 1 Offset 16
               OpDecorate %ComponentsBlock Block
               OpDecorate %components DescriptorSet 0
               OpDecorate %components Binding 5
               OpDecorate %gl_VertexID BuiltIn VertexId
               OpDecorate %gl_InstanceID BuiltIn InstanceId
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
       %uint = OpTypeInt 32 0
     %uint_1 = OpConstant %uint 1
%_arr_float_uint_1 = OpTypeArray %float %uint_1
%gl_PerVertex = OpTypeStruct %v4float %float %_arr_float_uint_1 %_arr_float_uint_1
%_ptr_Output_gl_PerVertex = OpTypePointer Output %gl_PerVertex
          %_ = OpVariable %_ptr_Output_gl_PerVertex Output
        %int = OpTypeInt 32 1
      %int_0 = OpConstant %int 0
%_ptr_Input_v4float = OpTypePointer Input %v4float
   %position = OpVariable %_ptr_Input_v4float Input
%_ptr_UniformConstant_v4float = OpTypePointer UniformConstant %v4float
%extPosition = OpVariable %_ptr_UniformConstant_v4float UniformConstant
    %v2float = OpTypeVector %float 2
%ComponentsBlock = OpTypeStruct %v4float %v2float
%_ptr_Uniform_ComponentsBlock = OpTypePointer Uniform %ComponentsBlock
 %components = OpVariable %_ptr_Uniform_ComponentsBlock Uniform
%_ptr_Uniform_v4float = OpTypePointer Uniform %v4float
      %int_1 = OpConstant %int 1
%_ptr_Uniform_v2float = OpTypePointer Uniform %v2float
    %float_0 = OpConstant %float 0
%_ptr_Output_v4float = OpTypePointer Output %v4float
%_ptr_Input_int = OpTypePointer Input %int
%gl_VertexID = OpVariable %_ptr_Input_int Input
%gl_InstanceID = OpVariable %_ptr_Input_int Input
       %main = OpFunction %void None %3
          %5 = OpLabel
         %18 = OpLoad %v4float %position
         %21 = OpLoad %v4float %extPosition
         %22 = OpFAdd %v4float %18 %21
         %28 = OpAccessChain %_ptr_Uniform_v4float %components %int_0
         %29 = OpLoad %v4float %28
         %30 = OpFAdd %v4float %22 %29
         %33 = OpAccessChain %_ptr_Uniform_v2float %components %int_1
         %34 = OpLoad %v2float %33
         %36 = OpCompositeExtract %float %34 0
         %37 = OpCompositeExtract %float %34 1
         %38 = OpCompositeConstruct %v4float %36 %37 %float_0 %float_0
         %39 = OpFAdd %v4float %30 %38
         %41 = OpAccessChain %_ptr_Output_v4float %_ %int_0
               OpStore %41 %39
               OpReturn
               OpFunctionEnd

[vertex shader]

#version 450

layout (location = 0) in vec4 position;
layout (location = 20) uniform vec4 extPosition;
layout (binding = 5) uniform ComponentsBlock
 {
    vec4 c1;
    vec2 c2;
 } components;

void main()
{
    gl_Position = position + extPosition + components.c1 + vec4(components.c2, 0.0, 0.0);
}


[fragment shader spirv]
; Automatically generated from the GLSL by shader_test_spirv.py. DO NOT EDIT
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 4
; Bound: 29
; Schema: 0
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %outColor
               OpExecutionMode %main OriginLowerLeft
               OpSource GLSL 450
               OpName %main "main"
               OpName %outColor "outColor"
               OpName %ComponentsBlock "ComponentsBlock"
               OpMemberName %ComponentsBlock 0 "c1"
               OpMemberName %ComponentsBlock 1 "c2"
               OpName %components "components"
               OpDecorate %outColor Location 3
               OpMemberDecorate %ComponentsBlock 0 Offset 0
               OpMemberDecorate %ComponentsBlock 1 Offset 16
               OpDecorate %ComponentsBlock Block
               OpDecorate %components DescriptorSet 0
               OpDecorate %components Binding 5
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
   %outColor = OpVariable %_ptr_Output_v4float Output
    %v3float = OpTypeVector %float 3
%ComponentsBlock = OpTypeStruct %v4float %v3float
%_ptr_Uniform_ComponentsBlock = OpTypePointer Uniform %ComponentsBlock
 %components = OpVariable %_ptr_Uniform_ComponentsBlock Uniform
        %int = OpTypeInt 32 1
      %int_0 = OpConstant %int 0
%_ptr_Uniform_v4float = OpTypePointer Uniform %v4float
      %int_1 = OpConstant %int 1
%_ptr_Uniform_v3float = OpTypePointer Uniform %v3float
    %float_1 = OpConstant %float 1
       %main = OpFunction %void None %3
          %5 = OpLabel
         %17 = OpAccessChain %_ptr_Uniform_v4float %components %int_0
         %18 = OpLoad %v4float %17
         %21 = OpAccessChain %_ptr_Uniform_v3float %components %int_1
         %22 = OpLoad %v3float %21
         %24 = OpCompositeExtract %float %22 0
         %25 = OpCompositeExtract %float %22 1
         %26 = OpCompositeExtract %float %22 2
         %27 = OpCompositeConstruct %v4float %24 %25 %26 %float_1
         %28 = OpFAdd %v4float %18 %27
               OpStore %outColor %28
               OpReturn
               OpFunctionEnd

[fragment shader]

#version 450

layout (location = 3) out vec4 outColor;
layout (binding = 5) uniform ComponentsBlock
 {
    vec4 c1;
    vec3 c2;
 } components;

void main()
{
	outColor = components.c1 + vec4(components.c2, 1.0);
}

[test]
link error
