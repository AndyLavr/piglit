[require]
SPIRV YES
GL >= 4.5
GLSL >= 4.50
GL_ARB_gl_spirv

[vertex shader]
#version 450 core

layout(location = 0) in vec4 piglit_vertex;

layout(location = 0) out block {
/*  uncommenting the array reveals glsl-spirv bug */
/*	float f[2]; */
	flat int i;
	flat uint u;
	flat double d;
	vec2 v2;
	vec3 v3;
	vec4 v4;
	mat2 m2;
	mat3 m3;
	mat4 m4;
	float f;
} sb;

layout(location = 12) out float f;
layout(location = 13) out vec4 v4;
layout(location = 17) out mat4 m4;


void main()
{
	gl_Position = piglit_vertex;

	sb.f = 1.0;
	sb.i = 1;
	sb.u = 1;
	sb.d = 0.0;
	sb.v2 = vec2(1.0, 0.0);
	sb.v3 = vec3(0.0, 1.0, 0.0);
	sb.v4 = vec4(0.0, 0.0, 0.0, 1.0);
	sb.m2 = mat2(sb.v2, sb.v2);
	sb.m3 = mat3(sb.v3, sb.v3, sb.v3);
	sb.m4 = mat4(sb.v4, sb.v4, sb.v4, sb.v4);

	f = sb.f;
	v4 = sb.v4;
	m4 = sb.m4;
}

[fragment shader]
#version 450

layout(location = 0) out vec4 color;

layout(location = 0) in block {
/*  uncommenting the array reveals glsl-spirv bug */
/*	float f[2]; */
	flat int i;
	flat uint u;
	flat double d;
	vec2 v2;
	vec3 v3;
	vec4 v4;
	mat2 m2;
	mat3 m3;
	mat4 m4;
	float f;
} sb;

layout(location = 12) in float f;
layout(location = 13) in vec4 v4;
layout(location = 17) in mat4 m4;

void main()
{
	float factor = (f * sb.f * float(sb.d) + float(sb.i) + float(sb.u)) / 2.0;
	vec4 v41 = vec4(sb.m2[0], sb.m2[1]);
	vec4 v42 = vec4(sb.v3, 1.0);
	vec4 v43 = vec4(sb.m2[0], sb.m2[1]);
	vec4 v44 = vec4(vec3(sb.m3[0]), float(sb.m3[1][0]));
	mat4 matrix = mat4(v41, v42, v43, v44);// + m4;

	color = v4 + float(m4[0][3] * sb.m3[0][1]) * factor * matrix[0];
}

[test]
draw rect -1 -1 2 2
