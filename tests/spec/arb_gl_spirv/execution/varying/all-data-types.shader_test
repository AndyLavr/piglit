[require]
SPIRV YES
GL >= 4.5
GLSL >= 4.50
GL_ARB_gl_spirv

[vertex shader spirv]
; Automatically generated from the GLSL by shader_test_spirv.py. DO NOT EDIT
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 129
; Schema: 0
               OpCapability Shader
               OpCapability Float64
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Vertex %main "main" %_ %piglit_vertex %v2 %v3 %v4 %f %i %d %u %m2 %m3 %m4 %m3x4 %gl_VertexID %gl_InstanceID
               OpSource GLSL 450
               OpName %main "main"
               OpName %gl_PerVertex "gl_PerVertex"
               OpMemberName %gl_PerVertex 0 "gl_Position"
               OpMemberName %gl_PerVertex 1 "gl_PointSize"
               OpMemberName %gl_PerVertex 2 "gl_ClipDistance"
               OpMemberName %gl_PerVertex 3 "gl_CullDistance"
               OpName %_ ""
               OpName %piglit_vertex "piglit_vertex"
               OpName %v2 "v2"
               OpName %v3 "v3"
               OpName %v4 "v4"
               OpName %f "f"
               OpName %i "i"
               OpName %d "d"
               OpName %u "u"
               OpName %m2 "m2"
               OpName %m3 "m3"
               OpName %m4 "m4"
               OpName %m3x4 "m3x4"
               OpName %gl_VertexID "gl_VertexID"
               OpName %gl_InstanceID "gl_InstanceID"
               OpMemberDecorate %gl_PerVertex 0 BuiltIn Position
               OpMemberDecorate %gl_PerVertex 1 BuiltIn PointSize
               OpMemberDecorate %gl_PerVertex 2 BuiltIn ClipDistance
               OpMemberDecorate %gl_PerVertex 3 BuiltIn CullDistance
               OpDecorate %gl_PerVertex Block
               OpDecorate %piglit_vertex Location 0
               OpDecorate %v2 Location 0
               OpDecorate %v3 Location 1
               OpDecorate %v4 Location 2
               OpDecorate %f Location 3
               OpDecorate %i Flat
               OpDecorate %i Location 4
               OpDecorate %d Flat
               OpDecorate %d Location 5
               OpDecorate %u Flat
               OpDecorate %u Location 20
               OpDecorate %m2 Location 6
               OpDecorate %m3 Location 8
               OpDecorate %m4 Location 11
               OpDecorate %m3x4 Location 15
               OpDecorate %gl_VertexID BuiltIn VertexId
               OpDecorate %gl_InstanceID BuiltIn InstanceId
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
       %uint = OpTypeInt 32 0
     %uint_1 = OpConstant %uint 1
%_arr_float_uint_1 = OpTypeArray %float %uint_1
%gl_PerVertex = OpTypeStruct %v4float %float %_arr_float_uint_1 %_arr_float_uint_1
%_ptr_Output_gl_PerVertex = OpTypePointer Output %gl_PerVertex
          %_ = OpVariable %_ptr_Output_gl_PerVertex Output
        %int = OpTypeInt 32 1
      %int_0 = OpConstant %int 0
%_ptr_Input_v4float = OpTypePointer Input %v4float
%piglit_vertex = OpVariable %_ptr_Input_v4float Input
%_ptr_Output_v4float = OpTypePointer Output %v4float
    %v2float = OpTypeVector %float 2
%_ptr_Output_v2float = OpTypePointer Output %v2float
         %v2 = OpVariable %_ptr_Output_v2float Output
  %float_0_2 = OpConstant %float 0.2
    %float_0 = OpConstant %float 0
         %26 = OpConstantComposite %v2float %float_0_2 %float_0
    %v3float = OpTypeVector %float 3
%_ptr_Output_v3float = OpTypePointer Output %v3float
         %v3 = OpVariable %_ptr_Output_v3float Output
         %30 = OpConstantComposite %v3float %float_0_2 %float_0 %float_0
         %v4 = OpVariable %_ptr_Output_v4float Output
    %float_1 = OpConstant %float 1
         %33 = OpConstantComposite %v4float %float_0_2 %float_0 %float_0 %float_1
%_ptr_Output_float = OpTypePointer Output %float
          %f = OpVariable %_ptr_Output_float Output
%_ptr_Output_int = OpTypePointer Output %int
          %i = OpVariable %_ptr_Output_int Output
      %int_1 = OpConstant %int 1
     %double = OpTypeFloat 64
%_ptr_Output_double = OpTypePointer Output %double
          %d = OpVariable %_ptr_Output_double Output
   %double_1 = OpConstant %double 1
%_ptr_Output_uint = OpTypePointer Output %uint
          %u = OpVariable %_ptr_Output_uint Output
%mat2v2float = OpTypeMatrix %v2float 2
%_ptr_Output_mat2v2float = OpTypePointer Output %mat2v2float
         %m2 = OpVariable %_ptr_Output_mat2v2float Output
%mat3v3float = OpTypeMatrix %v3float 3
%_ptr_Output_mat3v3float = OpTypePointer Output %mat3v3float
         %m3 = OpVariable %_ptr_Output_mat3v3float Output
%mat4v4float = OpTypeMatrix %v4float 4
%_ptr_Output_mat4v4float = OpTypePointer Output %mat4v4float
         %m4 = OpVariable %_ptr_Output_mat4v4float Output
%mat3v4float = OpTypeMatrix %v4float 3
%_ptr_Output_mat3v4float = OpTypePointer Output %mat3v4float
       %m3x4 = OpVariable %_ptr_Output_mat3v4float Output
%_ptr_Input_int = OpTypePointer Input %int
%gl_VertexID = OpVariable %_ptr_Input_int Input
%gl_InstanceID = OpVariable %_ptr_Input_int Input
       %main = OpFunction %void None %3
          %5 = OpLabel
         %18 = OpLoad %v4float %piglit_vertex
         %20 = OpAccessChain %_ptr_Output_v4float %_ %int_0
               OpStore %20 %18
               OpStore %v2 %26
               OpStore %v3 %30
               OpStore %v4 %33
               OpStore %f %float_1
               OpStore %i %int_1
               OpStore %d %double_1
               OpStore %u %uint_1
         %48 = OpLoad %v2float %v2
         %49 = OpLoad %v2float %v2
         %50 = OpCompositeExtract %float %48 0
         %51 = OpCompositeExtract %float %48 1
         %52 = OpCompositeExtract %float %49 0
         %53 = OpCompositeExtract %float %49 1
         %54 = OpCompositeConstruct %v2float %50 %51
         %55 = OpCompositeConstruct %v2float %52 %53
         %56 = OpCompositeConstruct %mat2v2float %54 %55
               OpStore %m2 %56
         %60 = OpLoad %v3float %v3
         %61 = OpLoad %v3float %v3
         %62 = OpLoad %v3float %v3
         %63 = OpCompositeExtract %float %60 0
         %64 = OpCompositeExtract %float %60 1
         %65 = OpCompositeExtract %float %60 2
         %66 = OpCompositeExtract %float %61 0
         %67 = OpCompositeExtract %float %61 1
         %68 = OpCompositeExtract %float %61 2
         %69 = OpCompositeExtract %float %62 0
         %70 = OpCompositeExtract %float %62 1
         %71 = OpCompositeExtract %float %62 2
         %72 = OpCompositeConstruct %v3float %63 %64 %65
         %73 = OpCompositeConstruct %v3float %66 %67 %68
         %74 = OpCompositeConstruct %v3float %69 %70 %71
         %75 = OpCompositeConstruct %mat3v3float %72 %73 %74
               OpStore %m3 %75
         %79 = OpLoad %v4float %v4
         %80 = OpLoad %v4float %v4
         %81 = OpLoad %v4float %v4
         %82 = OpLoad %v4float %v4
         %83 = OpCompositeExtract %float %79 0
         %84 = OpCompositeExtract %float %79 1
         %85 = OpCompositeExtract %float %79 2
         %86 = OpCompositeExtract %float %79 3
         %87 = OpCompositeExtract %float %80 0
         %88 = OpCompositeExtract %float %80 1
         %89 = OpCompositeExtract %float %80 2
         %90 = OpCompositeExtract %float %80 3
         %91 = OpCompositeExtract %float %81 0
         %92 = OpCompositeExtract %float %81 1
         %93 = OpCompositeExtract %float %81 2
         %94 = OpCompositeExtract %float %81 3
         %95 = OpCompositeExtract %float %82 0
         %96 = OpCompositeExtract %float %82 1
         %97 = OpCompositeExtract %float %82 2
         %98 = OpCompositeExtract %float %82 3
         %99 = OpCompositeConstruct %v4float %83 %84 %85 %86
        %100 = OpCompositeConstruct %v4float %87 %88 %89 %90
        %101 = OpCompositeConstruct %v4float %91 %92 %93 %94
        %102 = OpCompositeConstruct %v4float %95 %96 %97 %98
        %103 = OpCompositeConstruct %mat4v4float %99 %100 %101 %102
               OpStore %m4 %103
        %107 = OpLoad %v4float %v4
        %108 = OpLoad %v4float %v4
        %109 = OpLoad %v4float %v4
        %110 = OpCompositeExtract %float %107 0
        %111 = OpCompositeExtract %float %107 1
        %112 = OpCompositeExtract %float %107 2
        %113 = OpCompositeExtract %float %107 3
        %114 = OpCompositeExtract %float %108 0
        %115 = OpCompositeExtract %float %108 1
        %116 = OpCompositeExtract %float %108 2
        %117 = OpCompositeExtract %float %108 3
        %118 = OpCompositeExtract %float %109 0
        %119 = OpCompositeExtract %float %109 1
        %120 = OpCompositeExtract %float %109 2
        %121 = OpCompositeExtract %float %109 3
        %122 = OpCompositeConstruct %v4float %110 %111 %112 %113
        %123 = OpCompositeConstruct %v4float %114 %115 %116 %117
        %124 = OpCompositeConstruct %v4float %118 %119 %120 %121
        %125 = OpCompositeConstruct %mat3v4float %122 %123 %124
               OpStore %m3x4 %125
               OpReturn
               OpFunctionEnd

[vertex shader]
#version 450 core

layout(location = 0) in vec4 piglit_vertex;
layout(location = 0) out vec2 v2;
layout(location = 1) out vec3 v3;
layout(location = 2) out vec4 v4;
layout(location = 3) out float f;
layout(location = 4) out flat int i;
layout(location = 5) out flat double d;
layout(location = 6) out mat2 m2;
layout(location = 8) out mat3 m3;
layout(location = 11) out mat4 m4;
layout(location = 15) out mat3x4 m3x4;
layout(location = 20) out flat uint u;

void main()
{
	gl_Position = piglit_vertex;

	v2 = vec2(0.2, 0.0);
	v3 = vec3(0.2, 0.0, 0.0);
	v4 = vec4(0.2, 0.0, 0.0, 1.0);

	f = 1.0;
	i = 1;
	d = 1.0;
	u = 1;

	m2 = mat2(v2, v2);
	m3 = mat3(v3, v3, v3);
	m4 = mat4(v4, v4, v4, v4);
	m3x4 = mat3x4(v4, v4, v4);
}

[fragment shader spirv]
; Automatically generated from the GLSL by shader_test_spirv.py. DO NOT EDIT
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 142
; Schema: 0
               OpCapability Shader
               OpCapability Float64
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %u %f %d %i %m3 %m4 %m3x4 %v2 %v3 %v4 %color %m2
               OpExecutionMode %main OriginLowerLeft
               OpSource GLSL 450
               OpName %main "main"
               OpName %fact "fact"
               OpName %u "u"
               OpName %f "f"
               OpName %d "d"
               OpName %i "i"
               OpName %matrix "matrix"
               OpName %m3 "m3"
               OpName %m4 "m4"
               OpName %m3x4 "m3x4"
               OpName %vector "vector"
               OpName %v2 "v2"
               OpName %v3 "v3"
               OpName %v4 "v4"
               OpName %color "color"
               OpName %m2 "m2"
               OpDecorate %u Flat
               OpDecorate %u Location 20
               OpDecorate %f Location 3
               OpDecorate %d Flat
               OpDecorate %d Location 5
               OpDecorate %i Flat
               OpDecorate %i Location 4
               OpDecorate %m3 Location 8
               OpDecorate %m4 Location 11
               OpDecorate %m3x4 Location 15
               OpDecorate %v2 Location 0
               OpDecorate %v3 Location 1
               OpDecorate %v4 Location 2
               OpDecorate %color Location 0
               OpDecorate %m2 Location 6
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
      %float = OpTypeFloat 32
%_ptr_Function_float = OpTypePointer Function %float
       %uint = OpTypeInt 32 0
%_ptr_Input_uint = OpTypePointer Input %uint
          %u = OpVariable %_ptr_Input_uint Input
%_ptr_Input_float = OpTypePointer Input %float
          %f = OpVariable %_ptr_Input_float Input
     %double = OpTypeFloat 64
%_ptr_Input_double = OpTypePointer Input %double
          %d = OpVariable %_ptr_Input_double Input
        %int = OpTypeInt 32 1
%_ptr_Input_int = OpTypePointer Input %int
          %i = OpVariable %_ptr_Input_int Input
    %float_2 = OpConstant %float 2
    %v3float = OpTypeVector %float 3
%mat3v3float = OpTypeMatrix %v3float 3
%_ptr_Function_mat3v3float = OpTypePointer Function %mat3v3float
%_ptr_Input_mat3v3float = OpTypePointer Input %mat3v3float
         %m3 = OpVariable %_ptr_Input_mat3v3float Input
    %v4float = OpTypeVector %float 4
%mat4v4float = OpTypeMatrix %v4float 4
%_ptr_Input_mat4v4float = OpTypePointer Input %mat4v4float
         %m4 = OpVariable %_ptr_Input_mat4v4float Input
    %float_1 = OpConstant %float 1
    %float_0 = OpConstant %float 0
%mat3v4float = OpTypeMatrix %v4float 3
%_ptr_Input_mat3v4float = OpTypePointer Input %mat3v4float
       %m3x4 = OpVariable %_ptr_Input_mat3v4float Input
%_ptr_Function_v4float = OpTypePointer Function %v4float
    %v2float = OpTypeVector %float 2
%_ptr_Input_v2float = OpTypePointer Input %v2float
         %v2 = OpVariable %_ptr_Input_v2float Input
%_ptr_Input_v3float = OpTypePointer Input %v3float
         %v3 = OpVariable %_ptr_Input_v3float Input
%_ptr_Input_v4float = OpTypePointer Input %v4float
         %v4 = OpVariable %_ptr_Input_v4float Input
%_ptr_Output_v4float = OpTypePointer Output %v4float
      %color = OpVariable %_ptr_Output_v4float Output
     %uint_0 = OpConstant %uint 0
%_ptr_Output_float = OpTypePointer Output %float
%mat2v2float = OpTypeMatrix %v2float 2
%_ptr_Input_mat2v2float = OpTypePointer Input %mat2v2float
         %m2 = OpVariable %_ptr_Input_mat2v2float Input
      %int_0 = OpConstant %int 0
     %uint_2 = OpConstant %uint 2
       %main = OpFunction %void None %3
          %5 = OpLabel
       %fact = OpVariable %_ptr_Function_float Function
     %matrix = OpVariable %_ptr_Function_mat3v3float Function
     %vector = OpVariable %_ptr_Function_v4float Function
         %12 = OpLoad %uint %u
         %13 = OpConvertUToF %float %12
         %16 = OpLoad %float %f
         %20 = OpLoad %double %d
         %21 = OpFConvert %float %20
         %22 = OpFMul %float %16 %21
         %26 = OpLoad %int %i
         %27 = OpConvertSToF %float %26
         %28 = OpFAdd %float %22 %27
         %29 = OpFMul %float %13 %28
         %31 = OpFDiv %float %29 %float_2
               OpStore %fact %31
         %38 = OpLoad %mat3v3float %m3
         %43 = OpLoad %mat4v4float %m4
         %46 = OpCompositeExtract %float %43 0 0
         %47 = OpCompositeExtract %float %43 0 1
         %48 = OpCompositeExtract %float %43 0 2
         %49 = OpCompositeExtract %float %43 1 0
         %50 = OpCompositeExtract %float %43 1 1
         %51 = OpCompositeExtract %float %43 1 2
         %52 = OpCompositeExtract %float %43 2 0
         %53 = OpCompositeExtract %float %43 2 1
         %54 = OpCompositeExtract %float %43 2 2
         %55 = OpCompositeConstruct %v3float %46 %47 %48
         %56 = OpCompositeConstruct %v3float %49 %50 %51
         %57 = OpCompositeConstruct %v3float %52 %53 %54
         %58 = OpCompositeConstruct %mat3v3float %55 %56 %57
         %59 = OpCompositeExtract %v3float %38 0
         %60 = OpCompositeExtract %v3float %58 0
         %61 = OpFAdd %v3float %59 %60
         %62 = OpCompositeExtract %v3float %38 1
         %63 = OpCompositeExtract %v3float %58 1
         %64 = OpFAdd %v3float %62 %63
         %65 = OpCompositeExtract %v3float %38 2
         %66 = OpCompositeExtract %v3float %58 2
         %67 = OpFAdd %v3float %65 %66
         %68 = OpCompositeConstruct %mat3v3float %61 %64 %67
         %72 = OpLoad %mat3v4float %m3x4
         %73 = OpCompositeExtract %float %72 0 0
         %74 = OpCompositeExtract %float %72 0 1
         %75 = OpCompositeExtract %float %72 0 2
         %76 = OpCompositeExtract %float %72 1 0
         %77 = OpCompositeExtract %float %72 1 1
         %78 = OpCompositeExtract %float %72 1 2
         %79 = OpCompositeExtract %float %72 2 0
         %80 = OpCompositeExtract %float %72 2 1
         %81 = OpCompositeExtract %float %72 2 2
         %82 = OpCompositeConstruct %v3float %73 %74 %75
         %83 = OpCompositeConstruct %v3float %76 %77 %78
         %84 = OpCompositeConstruct %v3float %79 %80 %81
         %85 = OpCompositeConstruct %mat3v3float %82 %83 %84
         %86 = OpCompositeExtract %v3float %68 0
         %87 = OpCompositeExtract %v3float %85 0
         %88 = OpFSub %v3float %86 %87
         %89 = OpCompositeExtract %v3float %68 1
         %90 = OpCompositeExtract %v3float %85 1
         %91 = OpFSub %v3float %89 %90
         %92 = OpCompositeExtract %v3float %68 2
         %93 = OpCompositeExtract %v3float %85 2
         %94 = OpFSub %v3float %92 %93
         %95 = OpCompositeConstruct %mat3v3float %88 %91 %94
               OpStore %matrix %95
        %101 = OpLoad %v2float %v2
        %102 = OpCompositeExtract %float %101 0
        %103 = OpCompositeExtract %float %101 1
        %104 = OpCompositeConstruct %v4float %102 %103 %float_0 %float_0
        %107 = OpLoad %v3float %v3
        %108 = OpCompositeExtract %float %107 0
        %109 = OpCompositeExtract %float %107 1
        %110 = OpCompositeExtract %float %107 2
        %111 = OpCompositeConstruct %v4float %108 %109 %110 %float_0
        %112 = OpFAdd %v4float %104 %111
        %115 = OpLoad %v4float %v4
        %116 = OpFAdd %v4float %112 %115
               OpStore %vector %116
        %121 = OpAccessChain %_ptr_Output_float %color %uint_0
               OpStore %121 %float_0
        %122 = OpLoad %float %fact
        %127 = OpAccessChain %_ptr_Input_v2float %m2 %int_0
        %128 = OpLoad %v2float %127
        %129 = OpCompositeExtract %float %128 0
        %130 = OpCompositeExtract %float %128 1
        %131 = OpCompositeConstruct %v2float %129 %130
        %133 = OpAccessChain %_ptr_Function_float %matrix %int_0 %uint_2
        %134 = OpLoad %float %133
        %135 = OpVectorTimesScalar %v2float %131 %134
        %136 = OpCompositeExtract %float %135 0
        %137 = OpCompositeExtract %float %135 1
        %138 = OpCompositeConstruct %v4float %136 %137 %float_0 %float_0
        %139 = OpVectorTimesScalar %v4float %138 %122
        %140 = OpLoad %v4float %vector
        %141 = OpFAdd %v4float %139 %140
               OpStore %color %141
               OpReturn
               OpFunctionEnd

[fragment shader]
#version 450 core

layout(location = 0) out vec4 color;

layout(location = 0) in vec2 v2;
layout(location = 1) in vec3 v3;
layout(location = 2) in vec4 v4;
layout(location = 3) in float f;
layout(location = 4) in flat int i;
layout(location = 5) in flat double d;
layout(location = 6) in mat2 m2;
layout(location = 8) in mat3 m3;
layout(location = 11) in mat4 m4;
layout(location = 15) in mat3x4 m3x4;
layout(location = 20) in flat uint u;

void main()
{
	float fact = float(u) * (f * float(d) + float(i)) / 2.0;
	mat3 matrix = m3 + mat3(m4) - mat3(m3x4);
	vec4 vector = vec4(v2, 0.0, 0.0) + vec4(v3, 0.0) + v4;

	color[0] = 0.0;
	color = fact * vec4(vec2(m2[0]) * matrix[0][2], 0.0, 0.0) + vector;
}

[test]
draw rect -1 -1 2 2
probe all rgba 0.6 0.0 0.0 1.0
