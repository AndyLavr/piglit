# SSBO test using a matrix. One stage

[require]
SPIRV YES
GL >= 3.3
GLSL >= 3.30
GL_ARB_gl_spirv

[vertex shader passthrough]

[fragment shader spirv]
; Automatically generated from the GLSL by shader_test_spirv.py. DO NOT EDIT
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 4
; Bound: 32
; Schema: 0
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %outColor
               OpExecutionMode %main OriginLowerLeft
               OpSource GLSL 450
               OpName %main "main"
               OpName %outColor "outColor"
               OpName %ssbo "ssbo"
               OpMemberName %ssbo 0 "matrix"
               OpName %components "components"
               OpDecorate %outColor Location 0
               OpMemberDecorate %ssbo 0 RowMajor
               OpMemberDecorate %ssbo 0 Offset 0
               OpMemberDecorate %ssbo 0 MatrixStride 16
               OpDecorate %ssbo BufferBlock
               OpDecorate %components DescriptorSet 0
               OpDecorate %components Binding 5
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
   %outColor = OpVariable %_ptr_Output_v4float Output
%mat4v4float = OpTypeMatrix %v4float 4
       %ssbo = OpTypeStruct %mat4v4float
%_ptr_Uniform_ssbo = OpTypePointer Uniform %ssbo
 %components = OpVariable %_ptr_Uniform_ssbo Uniform
        %int = OpTypeInt 32 1
      %int_0 = OpConstant %int 0
      %int_3 = OpConstant %int 3
       %uint = OpTypeInt 32 0
     %uint_0 = OpConstant %uint 0
%_ptr_Uniform_float = OpTypePointer Uniform %float
     %uint_1 = OpConstant %uint 1
     %uint_2 = OpConstant %uint 2
     %uint_3 = OpConstant %uint 3
       %main = OpFunction %void None %3
          %5 = OpLabel
         %20 = OpAccessChain %_ptr_Uniform_float %components %int_0 %int_3 %uint_0
         %21 = OpLoad %float %20
         %23 = OpAccessChain %_ptr_Uniform_float %components %int_0 %int_3 %uint_1
         %24 = OpLoad %float %23
         %26 = OpAccessChain %_ptr_Uniform_float %components %int_0 %int_3 %uint_2
         %27 = OpLoad %float %26
         %29 = OpAccessChain %_ptr_Uniform_float %components %int_0 %int_3 %uint_3
         %30 = OpLoad %float %29
         %31 = OpCompositeConstruct %v4float %21 %24 %27 %30
               OpStore %outColor %31
               OpReturn
               OpFunctionEnd

[fragment shader]

#version 450

layout (location = 0) out vec4 outColor;
layout (binding = 5, row_major) buffer ssbo
 {
    mat4 matrix;
 } components;

void main()
{
	outColor = vec4(components.matrix[3][0], components.matrix[3][1], components.matrix[3][2], components.matrix[3][3]);
}

[test]
clear color 0.0 0.0 0.0 0.0
clear

ssbo 5 64
ssbo 5 subdata float 0  0.11
ssbo 5 subdata float 4  0.12
ssbo 5 subdata float 8  0.13
ssbo 5 subdata float 12 0.14
ssbo 5 subdata float 16 0.21
ssbo 5 subdata float 20 0.22
ssbo 5 subdata float 24 0.23
ssbo 5 subdata float 28 0.24
ssbo 5 subdata float 32 0.31
ssbo 5 subdata float 36 0.32
ssbo 5 subdata float 40 0.33
ssbo 5 subdata float 44 0.34
ssbo 5 subdata float 48 0.41
ssbo 5 subdata float 52 0.42
ssbo 5 subdata float 56 0.43
ssbo 5 subdata float 60 0.44

draw rect -1 -1 2 2
probe all rgba 0.14 0.24 0.34 0.44
