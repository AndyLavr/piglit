# SSBO test using a row_major 3x4 matrix. One stage

[require]
SPIRV YES
GL >= 3.3
GLSL >= 3.30
GL_ARB_gl_spirv

[vertex shader passthrough]

[fragment shader spirv]
; Automatically generated from the GLSL by shader_test_spirv.py. DO NOT EDIT
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 7
; Bound: 22
; Schema: 0
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %outColor
               OpExecutionMode %main OriginLowerLeft
               OpSource GLSL 450
               OpName %_ ""
               OpDecorate %outColor Location 0
               OpMemberDecorate %ssbo 0 RowMajor
               OpMemberDecorate %ssbo 0 Offset 0
               OpMemberDecorate %ssbo 0 MatrixStride 16
               OpDecorate %ssbo BufferBlock
               OpDecorate %_ DescriptorSet 0
               OpDecorate %_ Binding 5
               OpDecorate %u_idx Location 10
               OpDecorate %u_idx DescriptorSet 0
               OpDecorate %u_idx Binding 0
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
   %outColor = OpVariable %_ptr_Output_v4float Output
%mat3v4float = OpTypeMatrix %v4float 3
       %ssbo = OpTypeStruct %mat3v4float
%_ptr_Uniform_ssbo = OpTypePointer Uniform %ssbo
          %_ = OpVariable %_ptr_Uniform_ssbo Uniform
        %int = OpTypeInt 32 1
      %int_0 = OpConstant %int 0
%_ptr_UniformConstant_int = OpTypePointer UniformConstant %int
      %u_idx = OpVariable %_ptr_UniformConstant_int UniformConstant
%_ptr_Uniform_v4float = OpTypePointer Uniform %v4float
       %main = OpFunction %void None %3
          %5 = OpLabel
         %18 = OpLoad %int %u_idx
         %20 = OpAccessChain %_ptr_Uniform_v4float %_ %int_0 %18
         %21 = OpLoad %v4float %20
               OpStore %outColor %21
               OpReturn
               OpFunctionEnd

[fragment shader]

#version 450

layout (location = 0) out vec4 outColor;
layout (binding = 5, row_major) buffer ssbo
 {
    mat3x4 m;
 };

layout (location = 10) uniform int u_idx;

void main()
{
	outColor = m[u_idx];
}

[test]
clear color 0.0 0.0 0.0 0.0
clear

# With row major mode, we need to handle manually the offsets to push
# the data correctly. Below we are going to push the following
# 3x4 column_major matrix:
#
# 0.11 0.12 0.13 0.14
# 0.21 0.22 0.23 0.24
# 0.31 0.32 0.33 0.34

# We use matrix stride 16 as it is the one generated by glslang.
block matrix stride 16
ssbo 5 64
ssbo 5 subdata float 0  0.11
ssbo 5 subdata float 4  0.21
ssbo 5 subdata float 8  0.31

# As the SPIR-V generated has matrix-stride 16, there is a "hole" at
# offset 12. The same on 28 and 44

ssbo 5 subdata float 16 0.12
ssbo 5 subdata float 20 0.22
ssbo 5 subdata float 24 0.32

ssbo 5 subdata float 32 0.13
ssbo 5 subdata float 36 0.23
ssbo 5 subdata float 40 0.33

ssbo 5 subdata float 48 0.14
ssbo 5 subdata float 52 0.24
ssbo 5 subdata float 56 0.34

block binding 5
verify program_interface_query GL_SHADER_STORAGE_BLOCK ssbo GL_NUM_ACTIVE_VARIABLES 1
verify program_interface_query GL_SHADER_STORAGE_BLOCK ssbo GL_BUFFER_DATA_SIZE 64

uniform int 10 0 # u_idx
draw rect -1 -1 2 2
probe all rgba 0.11 0.12 0.13 0.14

uniform int 10 1 # u_idx
draw rect -1 -1 2 2
probe all rgba 0.21 0.22 0.23 0.24

uniform int 10 2 # u_idx
draw rect -1 -1 2 2
probe all rgba 0.31 0.32 0.33 0.34
