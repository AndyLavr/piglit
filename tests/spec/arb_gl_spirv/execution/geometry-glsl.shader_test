# Test a very simple vertex-geometry-fragment shader pipeline with two
# uniforms with explicit location, using glsl as base.

[require]
GL >= 3.3
GLSL >= 3.30
GL_ARB_gl_spirv

[vertex shader]
#version 430

layout(location = 0) in vec4 piglit_vertex;

void main() {
   gl_Position = piglit_vertex;
}

[geometry shader]
#version 430
#extension GL_ARB_geometry_shader4: enable

layout (triangles) in;
layout (triangle_strip, max_vertices=3) out;

void main () {
 int i;
 for (i = 0; i < 3; i++) {
   gl_Position = gl_in[i].gl_Position;
   EmitVertex();
 }
}


[fragment shader]
#version 430

layout(location = 0) uniform vec4 base;
layout(location = 1) uniform vec4 multiplier;

layout(location = 0) out vec4 outcolor;

void main() {
    outcolor = base * multiplier;
}

[test]
clear color 1.0 0.0 0.0 0.0
clear

uniform vec4 0 0.2 0.1 0.1 1.6
uniform vec4 1 0.5 2.0 3.0 0.25

draw rect -1 -1 2 2
probe all rgba 0.1 0.2 0.3 0.4
