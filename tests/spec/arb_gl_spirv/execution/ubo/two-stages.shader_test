# Simple UBO test with two stages using the same UBO.

[require]
SPIRV YES
GL >= 3.3
GLSL >= 3.30
GL_ARB_gl_spirv

[vertex shader spirv]
; Automatically generated from the GLSL by shader_test_spirv.py. DO NOT EDIT
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 7
; Bound: 41
; Schema: 0
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Vertex %main "main" %vertexColor %_ %piglit_vertex %gl_VertexID %gl_InstanceID
               OpSource GLSL 450
               OpName %_ ""
               OpDecorate %vertexColor Location 1
               OpMemberDecorate %ComponentsBlock 0 Offset 0
               OpMemberDecorate %ComponentsBlock 1 Offset 16
               OpDecorate %ComponentsBlock Block
               OpDecorate %components DescriptorSet 0
               OpDecorate %components Binding 5
               OpMemberDecorate %gl_PerVertex 0 BuiltIn Position
               OpMemberDecorate %gl_PerVertex 1 BuiltIn PointSize
               OpMemberDecorate %gl_PerVertex 2 BuiltIn ClipDistance
               OpMemberDecorate %gl_PerVertex 3 BuiltIn CullDistance
               OpDecorate %gl_PerVertex Block
               OpDecorate %piglit_vertex Location 0
               OpDecorate %gl_VertexID BuiltIn VertexId
               OpDecorate %gl_InstanceID BuiltIn InstanceId
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
%vertexColor = OpVariable %_ptr_Output_v4float Output
    %v2float = OpTypeVector %float 2
%ComponentsBlock = OpTypeStruct %v4float %v2float
%_ptr_Uniform_ComponentsBlock = OpTypePointer Uniform %ComponentsBlock
 %components = OpVariable %_ptr_Uniform_ComponentsBlock Uniform
        %int = OpTypeInt 32 1
      %int_0 = OpConstant %int 0
%_ptr_Uniform_v4float = OpTypePointer Uniform %v4float
      %int_1 = OpConstant %int 1
%_ptr_Uniform_v2float = OpTypePointer Uniform %v2float
    %float_0 = OpConstant %float 0
       %uint = OpTypeInt 32 0
     %uint_1 = OpConstant %uint 1
%_arr_float_uint_1 = OpTypeArray %float %uint_1
%gl_PerVertex = OpTypeStruct %v4float %float %_arr_float_uint_1 %_arr_float_uint_1
%_ptr_Output_gl_PerVertex = OpTypePointer Output %gl_PerVertex
          %_ = OpVariable %_ptr_Output_gl_PerVertex Output
%_ptr_Input_v4float = OpTypePointer Input %v4float
%piglit_vertex = OpVariable %_ptr_Input_v4float Input
%_ptr_Input_int = OpTypePointer Input %int
%gl_VertexID = OpVariable %_ptr_Input_int Input
%gl_InstanceID = OpVariable %_ptr_Input_int Input
       %main = OpFunction %void None %3
          %5 = OpLabel
         %17 = OpAccessChain %_ptr_Uniform_v4float %components %int_0
         %18 = OpLoad %v4float %17
         %21 = OpAccessChain %_ptr_Uniform_v2float %components %int_1
         %22 = OpLoad %v2float %21
         %24 = OpCompositeExtract %float %22 0
         %25 = OpCompositeExtract %float %22 1
         %26 = OpCompositeConstruct %v4float %24 %25 %float_0 %float_0
         %27 = OpFAdd %v4float %18 %26
               OpStore %vertexColor %27
         %36 = OpLoad %v4float %piglit_vertex
         %37 = OpAccessChain %_ptr_Output_v4float %_ %int_0
               OpStore %37 %36
               OpReturn
               OpFunctionEnd

[vertex shader]

#version 450

layout (location = 0) in vec4 piglit_vertex;
layout (location = 1) out vec4 vertexColor;
layout (std140, binding = 5) uniform ComponentsBlock
 {
    vec4 c1;
    vec2 c2;
 } components;

void main()
{
    vertexColor = components.c1 + vec4(components.c2, 0.0, 0.0);
    gl_Position = piglit_vertex;
}


[fragment shader spirv]
; Automatically generated from the GLSL by shader_test_spirv.py. DO NOT EDIT
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 7
; Bound: 35
; Schema: 0
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %outColor %vertexColor
               OpExecutionMode %main OriginLowerLeft
               OpSource GLSL 450
               OpMemberDecorate %ComponentsBlock 0 Offset 0
               OpMemberDecorate %ComponentsBlock 1 Offset 16
               OpDecorate %ComponentsBlock Block
               OpDecorate %components DescriptorSet 0
               OpDecorate %components Binding 5
               OpDecorate %outColor Location 0
               OpDecorate %vertexColor Location 1
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Function_v4float = OpTypePointer Function %v4float
    %v2float = OpTypeVector %float 2
%ComponentsBlock = OpTypeStruct %v4float %v2float
%_ptr_Uniform_ComponentsBlock = OpTypePointer Uniform %ComponentsBlock
 %components = OpVariable %_ptr_Uniform_ComponentsBlock Uniform
        %int = OpTypeInt 32 1
      %int_0 = OpConstant %int 0
%_ptr_Uniform_v4float = OpTypePointer Uniform %v4float
      %int_1 = OpConstant %int 1
%_ptr_Uniform_v2float = OpTypePointer Uniform %v2float
    %float_0 = OpConstant %float 0
%_ptr_Output_v4float = OpTypePointer Output %v4float
   %outColor = OpVariable %_ptr_Output_v4float Output
%_ptr_Input_v4float = OpTypePointer Input %v4float
%vertexColor = OpVariable %_ptr_Input_v4float Input
       %main = OpFunction %void None %3
          %5 = OpLabel
      %color = OpVariable %_ptr_Function_v4float Function
         %17 = OpAccessChain %_ptr_Uniform_v4float %components %int_0
         %18 = OpLoad %v4float %17
         %21 = OpAccessChain %_ptr_Uniform_v2float %components %int_1
         %22 = OpLoad %v2float %21
         %24 = OpCompositeExtract %float %22 0
         %25 = OpCompositeExtract %float %22 1
         %26 = OpCompositeConstruct %v4float %24 %25 %float_0 %float_0
         %27 = OpFAdd %v4float %18 %26
               OpStore %color %27
         %30 = OpLoad %v4float %color
         %33 = OpLoad %v4float %vertexColor
         %34 = OpFAdd %v4float %30 %33
               OpStore %outColor %34
               OpReturn
               OpFunctionEnd

[fragment shader]

#version 450

layout (location = 0) out vec4 outColor;
layout (location = 1) in vec4 vertexColor;
layout (std140, binding = 5) uniform ComponentsBlock
 {
    vec4 c1;
    vec2 c2;
 } components;

void main()
{
	vec4 color = components.c1 + vec4(components.c2, 0.0, 0.0);
	outColor = color + vertexColor;
}

[test]
clear color 1.0 0.0 0.0 0.0
clear

block binding 5
block offset 0
uniform vec4 ComponentsBlock.c1 0.0 0.0 0.3 0.4
block offset 16
uniform vec2 ComponentsBlock.c2 0.1 0.2

verify program_interface_query GL_UNIFORM_BLOCK ComponentsBlock GL_NUM_ACTIVE_VARIABLES 2
verify program_interface_query GL_UNIFORM_BLOCK ComponentsBlock GL_BUFFER_DATA_SIZE 32

verify program_query GL_ACTIVE_UNIFORMS 2

draw rect -1 -1 2 2
probe all rgba 0.2 0.4 0.6 0.8
