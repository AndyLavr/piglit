/* The ARB_shader_atomic_counters says:
 *
 *     "It is legal for some shaders to provide a layout qualifier for
 *      a uniform variable of the same name, while another shader does
 *      not provide a layout qualifier for a uniform variable of the
 *      same name, but if provided, all provided layout qualifiers
 *      must be equal for a uniform variable of the same name, and if
 *      not provided, all implicitly provided layout qualifiers must
 *      be equal for a uniform variable of the same name."
 *
 * Verify that a link error happens when using different binding
 * points for an atomic counter with the same name in different
 * compilation units.
 */

[require]
GL >= 3.00
GLSL >= 1.40
GL_ARB_shader_atomic_counters

[vertex shader]
#version 140
#extension GL_ARB_shader_atomic_counters: require

layout (binding = 0) uniform atomic_uint x;

in vec4 piglit_vertex;
out vec4 vs_fs;

void main()
{
	vs_fs = vec4(atomicCounter(x));
	gl_Position = piglit_vertex;
}

[fragment shader]
#version 140
#extension GL_ARB_shader_atomic_counters: require

layout (binding = 1) uniform atomic_uint x;

in  vec4 vs_fs;
out vec4 fs_out;

void main()
{
	fs_out = vs_fs * atomicCounter(x);
}

[test]
link error
