# Tests that no link error occurs when two different but equally
# instanced interface blocks differ only in its binding
# qualification between the vertex and fragment shaders.
#
# GLSLangSpec.1.50.11, 4.3.7 Interface Blocks:
# "The block name (block-name) is used to match interfaces: an output
#  block of one pipeline stage will be matched to an input block with
#  the same name in the subsequent pipeline stage. For uniform blocks,
#  the application uses the block name to identify the block.
#
#  ...
#
#  Outside the shading language (i.e., in the API), members are
#  similarly identified except the block name is always used in place
#  of the instance name (API accesses are to interfaces, not to
#  shaders)."
#

[require]
GLSL >= 1.50
GL_ARB_enhanced_layouts
GL_ARB_shader_storage_buffer_object

[vertex shader]
#version 150
#extension GL_ARB_enhanced_layouts : require
#extension GL_ARB_shader_storage_buffer_object: require

layout(std140) buffer blockA {
	layout(align = 32) vec4 a;
} inst;

void main()
{
	gl_Position = inst.a;
}

[fragment shader]
#version 150
#extension GL_ARB_enhanced_layouts : require
#extension GL_ARB_shader_storage_buffer_object: require

layout(std140) buffer blockB {
	layout(align = 64) vec4 a;
} inst;

out vec4 color;

void main()
{
	color = inst.a;
}

[test]
link success
