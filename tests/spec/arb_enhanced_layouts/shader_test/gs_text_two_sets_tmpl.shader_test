[geometry shader]
#version 150
#extension GL_ARB_enhanced_layouts: require
#extension GL_ARB_gpu_shader5 : enable
#define INVOCATION_MAX_N %u

layout(points, invocations = INVOCATION_MAX_N) in;
layout(points, max_vertices = 1) out;

layout(xfb_offset = 0) out float x1_out;
layout(xfb_offset = 4) out vec2 x2_out;
layout(xfb_offset = 12) out vec3 x3_out;
out vec3 not_captured1;
layout(xfb_buffer = 2) out;
layout(xfb_offset = 0) out float y1_out;
layout(xfb_offset = 4) out vec4 y2_out;
layout(xfb_buffer = 2) out vec3 not_captured2;

void main() {
   gl_Position = gl_in[0].gl_Position;
   x1_out = 1.0 + gl_InvocationID;
   x2_out = vec2(2.0 + gl_InvocationID, 3.0 + gl_InvocationID);
   x3_out = vec3(4.0 + gl_InvocationID, 5.0 + gl_InvocationID,
                 6.0 + gl_InvocationID);
   y1_out = 7.0 + gl_InvocationID;
   y2_out = vec4(8.0 + gl_InvocationID, 9.0 + gl_InvocationID,
                 10.0 + gl_InvocationID, 11.0 + gl_InvocationID);
   not_captured1 = vec3(1.0);
   not_captured2 = vec3(1.0);
   EmitVertex();
   EndPrimitive();
}
