[require]
GLSL >= 1.50
GL_ARB_gpu_shader_fp64

[vertex shader]
#version 150

in vec4 vertex;
out vec4 vertex_to_gs;

void main()
{
	vertex_to_gs = vertex;
}

[geometry shader]
#version 150
#extension GL_ARB_gpu_shader_fp64 : require

layout(triangles) in;
layout(triangle_strip, max_vertices = 3) out;

uniform int j;
uniform ubo1 {
	dvec4 colors[4];
};

in vec4 vertex_to_gs[3];
out vec4 v;

void main()
{
	for (int i = 0; i < 3; i++) {
		gl_Position = vertex_to_gs[i];
		dvec4 temp[4] = colors;
		temp[0] = dvec4(1.0, 0.0, 0.0, 0.0);
		v = temp[j];
		EmitVertex();
	}
}

[fragment shader]
#version 150

in vec4 v;

void main()
{
	gl_FragColor = v;
}

[vertex data]
vertex/float/2
-1.0 -1.0
 1.0 -1.0
 1.0  1.0
-1.0  1.0

[test]
uniform int j 1
uniform dvec4 colors[0] 0.0 0.0 0.0 0.0
uniform dvec4 colors[1] 0.0 1.0 0.0 0.0
uniform dvec4 colors[2] 0.0 1.0 1.0 0.0
uniform dvec4 colors[3] 1.0 0.0 1.0 0.0
draw arrays GL_TRIANGLE_FAN 0 4
probe all rgba 0.0 1.0 0.0 0.0
