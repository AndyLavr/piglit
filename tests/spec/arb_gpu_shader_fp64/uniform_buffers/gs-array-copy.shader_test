[require]
GLSL >= 1.50
GL_ARB_gpu_shader_fp64

[vertex shader]
#version 150
#extension GL_ARB_gpu_shader_fp64 : require
in vec4 piglit_vertex;
out vec4 vertex_to_gs;

void main()
{
        vertex_to_gs = piglit_vertex;
}

[geometry shader]
#version 150
#extension GL_ARB_gpu_shader_fp64 : require
layout(triangles) in;
layout(triangle_strip, max_vertices = 3) out;

uniform int i;
uniform ubo1 {
        dvec4 colors[4];
};

in vec4 vertex_to_gs[3];
out vec4 v;

void main()
{
        dvec4 temp[4] = colors;
        temp[0] = dvec4(1.0, 0.0, 0.0, 0.0);
        v = vec4(temp[i]);

        for (int j = 0; j < 3; j++) {
            gl_Position = vertex_to_gs[j];
            EmitVertex();
        }
}

[fragment shader]
#version 150
#extension GL_ARB_gpu_shader_fp64 : require

in vec4 v;
out vec4 color;

void main()
{
        color = v;
}

[test]
uniform int i 1
uniform dvec4 colors[0] 0.0 0.0 0.0 0.0
uniform dvec4 colors[1] 0.0 1.0 0.0 0.0
uniform dvec4 colors[2] 0.0 1.0 1.0 0.0
uniform dvec4 colors[3] 1.0 0.0 1.0 0.0
draw rect -1 -1 2 2
probe all rgba 0.0 1.0 0.0 0.0
