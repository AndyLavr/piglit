[require]
GLSL >= 1.50
GL_ARB_gpu_shader_fp64

[vertex shader]
#version 150
in vec4 piglit_vertex;
out vec4 vertex_to_gs;

void main()
{
        vertex_to_gs = piglit_vertex;
}

[geometry shader]
#version 150
#extension GL_ARB_gpu_shader_fp64 : require
layout(triangles) in;
layout(triangle_strip, max_vertices = 3) out;

uniform double arg0;
uniform double tolerance;
uniform dvec4 expected;

uniform double arg[7];

in vec4 vertex_to_gs[3];
out vec4 v;

void main()
{
	dvec4 result =  dvec4(arg[int(arg[6])] + arg0);
        v = distance(result, expected) <= tolerance ? vec4(0.0, 1.0, 0.0, 1.0) : vec4(1.0, 1.0, 0.0, 1.0);

        for (int i = 0; i < 3; i++) {
            gl_Position = vertex_to_gs[i];
            EmitVertex();
        }
}

[fragment shader]
#version 150

in vec4 v;
out vec4 color;

void main()
{
	color = v;
}

[test]
uniform double arg0 0.25
uniform double tolerance 0.0
uniform dvec4 expected 0.65 0.65 0.65 0.65
uniform double arg[0] 0.1
uniform double arg[1] 0.2
uniform double arg[2] 0.3
uniform double arg[3] 0.4
uniform double arg[4] 0.5
uniform double arg[5] 0.6
uniform double arg[6] 3.0
draw rect -1 -1 2 2
probe rgba 1 1 0.0 1.0 0.0 1.0
