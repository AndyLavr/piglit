[require]
GLSL >= 1.50
GL_ARB_gpu_shader_fp64

[vertex shader passthrough]

[fragment shader]
#version 150
#extension GL_ARB_gpu_shader_fp64 : require

uniform dvec3 dvec3_value;
uniform vec3 vec3_value;

out vec4 color;

#define RED vec4(1.0, 0.0, 0.0, 1.0)
#define GREEN vec4(0.0, 1.0, 0.0, 1.0)

void main()
{
    vec3 converted = vec3(dvec3_value);
    bool match = converted == vec3_value;
    color = match ? GREEN : RED;
}

[test]
uniform dvec3 dvec3_value -5.0 -5.0 -5.0
uniform vec3 vec3_value -5.0 -5.0 -5.0
draw rect -1 -1 2 2
probe all rgba 0.0 1.0 0.0 1.0

uniform dvec3 dvec3_value 5.0 5.0 5.0
uniform vec3 vec3_value 5.0 5.0 5.0
draw rect -1 -1 2 2
probe all rgba 0.0 1.0 0.0 1.0

uniform dvec3 dvec3_value 1.94673001766204833984375 1.94673001766204833984375 1.94673001766204833984375
uniform vec3 vec3_value 1.94673001766204833984375 1.94673001766204833984375 1.94673001766204833984375
draw rect -1 -1 2 2
probe all rgba 0.0 1.0 0.0 1.0

uniform dvec3 dvec3_value -16777216.0 -16777216.0 -16777216.0
uniform vec3 vec3_value -16777216.0 -16777216.0 -16777216.0
draw rect -1 -1 2 2
probe all rgba 0.0 1.0 0.0 1.0

uniform dvec3 dvec3_value 16777216.0 16777216.0 16777216.0
uniform vec3 vec3_value 16777216.0 16777216.0 16777216.0
draw rect -1 -1 2 2
probe all rgba 0.0 1.0 0.0 1.0
