# Test proper behavior of the isinf(vec4) function.
#
# Note: testing behavior if isinf() is challenging because the GLSL
# 1.50 spec does not explicitly define any circumstances under which
# infinite values are required to be generated.  This test assumes
# that the expressions 1.0*exp(1000.0) and -1.0*exp(1000.0) produce
# infinite values when evaluated in the shader.

[require]
GLSL >= 1.50
GL_ARB_gpu_shader_fp64

[vertex shader]
#version 150

in vec4 piglit_vertex;
out vec4 vertex_to_gs;

void main()
{
    vertex_to_gs = piglit_vertex;
}

[geometry shader]
#version 150
#extension GL_ARB_gpu_shader_fp64 : require

layout(triangles) in;
layout(triangle_strip, max_vertices = 3) out;

uniform double tolerance;
uniform dvec4 multiplier;
uniform vec4 exponent;
uniform dvec4 expected;

in vec4 vertex_to_gs[3];
out vec4 fs_color;

void main()
{
  fs_color = vec4(0.0);

  dvec4 r4 = multiplier*exp(exponent);
  dvec4 bl4 = dvec4(isinf(r4));
  if (distance(bl4, expected) > tolerance) {
     fs_color.x = 1.0;
  }

  dvec3 r3 = multiplier.xyz*exp(exponent.xyz);
  dvec3 bl3 = dvec3(isinf(r3));
  if (distance(bl3, expected.xyz) > tolerance) {
     fs_color.y = 1.0;
  }

  dvec2 r2 = multiplier.zw*exp(exponent.zw);
  dvec2 bl2 = dvec2(isinf(r2));
  if (distance(bl2, expected.zw) > tolerance) {
     fs_color.z = 1.0;
  }

  double r1 = multiplier.x*exp(exponent.x);
  double bl1 = double(isinf(r1));
  if (distance(bl1, expected.x) > tolerance) {
     fs_color.w = 1.0;
  }

  for (int i = 0; i < 3; i++) {
     gl_Position = vertex_to_gs[i];
     EmitVertex();
  }
}

[fragment shader]
#version 150

in vec4 fs_color;
out vec4 color;

void main() {
  color = fs_color;
}

[test]
uniform double tolerance 0.0
uniform dvec4 multiplier 1.0 1.0   -1.0   -1.0
uniform vec4 exponent    1.0 1000.0 1000.0 1.0
uniform dvec4 expected   0.0 1.0    1.0    0.0
draw rect -1 -1 2 2
probe rgba 0 0 0.0 0.0 0.0 0.0

uniform double tolerance  0.0
uniform dvec4 multiplier -1.0   -1.0 1.0 1.0
uniform vec4 exponent     1000.0 1.0 1.0 1000.0
uniform dvec4 expected    1.0    0.0 0.0 1.0
draw rect -1 -1 2 2
probe rgba 1 0 0.0 0.0 0.0 0.0
