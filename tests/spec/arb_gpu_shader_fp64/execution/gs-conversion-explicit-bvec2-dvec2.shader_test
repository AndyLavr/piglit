[require]
GLSL >= 1.50
GL_ARB_gpu_shader_fp64

[vertex shader]
#version 150

in vec4 piglit_vertex;
out vec4 vertex_to_gs;

void main()
{
    vertex_to_gs = piglit_vertex;
}

[geometry shader]
#version 150
#extension GL_ARB_gpu_shader_fp64 : require

layout(triangles) in;
layout(triangle_strip, max_vertices = 3) out;

uniform bvec2 bvec2_value;
uniform dvec2 dvec2_value;

in vec4 vertex_to_gs[3];
out vec4 fs_color;

#define RED vec4(1.0, 0.0, 0.0, 1.0)
#define GREEN vec4(0.0, 1.0, 0.0, 1.0)

void main()
{
    dvec2 converted = dvec2(bvec2_value);
    bool match = converted == dvec2_value;
    fs_color = match ? GREEN : RED;

    for (int i = 0; i < 3; i++) {
        gl_Position = vertex_to_gs[i];
        EmitVertex();
    }
}

[fragment shader]
#version 150

in vec4 fs_color;
out vec4 color;

void main()
{
    color = fs_color;
}

[test]
uniform ivec2 bvec2_value 0 0
uniform dvec2 dvec2_value 0.0 0.0
draw rect -1 -1 2 2
probe all rgba 0.0 1.0 0.0 1.0

uniform ivec2 bvec2_value 1 1
uniform dvec2 dvec2_value 1.0 1.0
draw rect -1 -1 2 2
probe all rgba 0.0 1.0 0.0 1.0
