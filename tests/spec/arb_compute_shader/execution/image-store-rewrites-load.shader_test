# Verify that an image store instruction rewrites
# a previous compatible image load

[require]
GL >= 3.3
GLSL >= 3.30
GL_ARB_compute_shader
GL_ARB_shader_image_load_store

[compute shader]
#version 330
#extension GL_ARB_compute_shader: enable
#extension GL_ARB_shader_atomic_counters: enable
#extension GL_ARB_shader_image_load_store: enable

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(binding = 0) uniform atomic_uint counter;
layout(r32i) uniform iimage2D itex;
writeonly uniform image2D dst;

void main()
{
  ivec2 coord = ivec2(0, 0);

  // the imageLoad should be rewritten by the imageStore
  imageStore(itex, coord, ivec4(1, 0, 0, 0));
  ivec4 val = imageLoad(itex, coord);

  if (val.x == 1)
    atomicCounterIncrement(counter);
}

[test]
atomic counters 1

# Setup itex image
texture rgbw 0 (1, 1) GL_RGBA8
uniform int itex 0
image texture 0 GL_RGBA8
fb tex 2d 0
clear color 0.0 0.0 0.0 0.0
clear

# Probe output
compute 1 1 1
probe atomic counter 0 == 1
