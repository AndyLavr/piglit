# Same as basic-texture2D.shader_test, but with some math on the handle
[require]
GL >= 3.3
GLSL >= 3.30
GL_ARB_bindless_texture

[vertex shader passthrough]

[fragment shader]
#version 330
#extension GL_ARB_bindless_texture: require

layout (bindless_sampler) uniform sampler2D tex;
uniform uvec2 handleOffset;

out vec4 finalColor;

void main()
{
	sampler2D fixedTex;

	uvec2 handle = uvec2(tex);
	handle.x -= 0x12345678u;
	handle.y -= 0x9abcdef0u;

	fixedTex = sampler2D(handle + handleOffset);

	finalColor = texture2D(fixedTex, vec2(0, 0));
}

[test]
texture rgbw 0 (16, 16)
resident texture 0
uniform uvec2 handleOffset 0x12345678 0x9abcdef0
uniform handle tex 0
draw rect -1 -1 2 2
relative probe rgb (0.0, 0.0) (1.0, 0.0, 0.0)
