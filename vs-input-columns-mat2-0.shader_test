[require]
GLSL >= 1.50

[vertex shader]
#version 150

uniform mat2 expected;

in mat2 value;

in vec3 piglit_vertex;
out vec4 fs_color;

#define RED vec4(1.0, 0.0, 0.0, 1.0)
#define GREEN vec4(0.0, 1.0, 0.0, 1.0)

void main()
{
    gl_Position = vec4(piglit_vertex, 1.0);
    //if (value[0] != expected[0]) {
    if (value != expected) {
        fs_color = RED;
	return;
    }
    fs_color = GREEN;
}

[fragment shader]
#version 150

in vec4 fs_color;
out vec4 color;

void main()
{
    color = fs_color;
}

[vertex data]
piglit_vertex/float/vec3 value/double/mat2/0 value/double/mat2/1
-1.0 -1.0  0.0    0xc21620c5  0x75bc289b   0x54c1c081  0x878218f8
 1.0 -1.0  0.0    0xc21620c5  0x75bc289b   0x54c1c081  0x878218f8
 1.0  1.0  0.0    0xc21620c5  0x75bc289b   0x54c1c081  0x878218f8
-1.0  1.0  0.0    0xc21620c5  0x75bc289b   0x54c1c081  0x878218f8

[test]
uniform mat2 expected 0xc21620c5 0x75bc289b 0x54c1c081 0x878218f8
clear color 0.0 0.0 1.0 0.0
clear
draw arrays GL_TRIANGLE_FAN 0 4
probe all rgba 0.0 1.0 0.0 1.0
